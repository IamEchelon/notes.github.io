{"version":3,"sources":["app/elm/Main.elm","app/elm/Note.elm","app/elm/Shapes.elm","app/js/index.js","app/js/instruments.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;CCAA;AAAA;AAAA;AAAA;CCAA;AAAA;AAAA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1EA;AAAA;ACAA;AAAA;AACA;AADA;AAAA","file":"public/js/app.js","sourcesContent":["","","","'use strict';\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  // Set and initialize elm constants\n  var node = document.getElementById('note-box');\n  var elmApp = Elm.Main.embed(node);\n  var synth;\n  var context = new AudioContext();\n\n  // Set up initial instruments\n  var limiter = new Tone.Limiter(-14);\n  var duosynth = new Tone.DuoSynth().connect(limiter).toMaster();\n  var fmsynth = new Tone.FMSynth().connect(limiter).toMaster();\n  var square = new Tone.Synth({\n    oscillator: {\n      type: 'sawtooth'\n    },\n    envelope: {\n      attack: 0.01,\n      decay: 0.2,\n      sustain: 0.2,\n      release: 0.2\n    }\n  }).connect(limiter).toMaster();\n  // Selects & creates a new instance of tone synthesizer\n  function chooseSynth(elmSynth) {\n    switch (elmSynth) {\n      case 'duosynth':\n        return duosynth;\n      case 'fmsynth':\n        return fmsynth;\n      case 'membsynth':\n        return new Tone.MembraneSynth().toMaster();\n      case 'monosynth':\n        return new Tone.MonoSynth().toMaster();\n      case 'square':\n        return square;\n      case 'amsynth':\n        return new Tone.AMSynth().toMaster();\n      case 'Please Select a Sound-':\n        return 'None';\n      default:\n        console.log('Something has gone horribly awry!');\n    }\n  }\n\n  function nav(browser) {\n    return navigator.userAgent.match(browser);\n  }\n\n  // Receive info from Elm\n  if (nav(/Android/i) || nav(/webOS/i) || nav(/iPhone/i) || nav(/iPad/i)) {\n    elmApp.ports.initMobile.subscribe(setMobileContext);\n  } else {\n    elmApp.ports.synthToJS.subscribe(synthSelection);\n  }\n\n  // elm callbacks\n  function setMobileContext(clear) {\n    StartAudioContext(Tone.context, '#playButton');\n    elmApp.ports.synthToJS.subscribe(synthSelection);\n  }\n\n  function synthSelection(elmSynth) {\n    synth = chooseSynth(elmSynth);\n    elmApp.ports.noteToJS.subscribe(triggerNote);\n  }\n\n  function triggerNote(elmNote) {\n    elmNote === '' ? synth.triggerRelease() : synth.triggerAttack(elmNote);\n  }\n\n  console.log('Initialized app');\n});\n","\"use strict\";\n"]}