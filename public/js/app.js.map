{"version":3,"sources":["app/elm/Main.elm","app/elm/Note.elm","app/elm/Shapes.elm","app/js/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;CCAA;AAAA;AAAA;AAAA;CCAA;AAAA;AAAA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApEA;AAAA","file":"public/js/app.js","sourcesContent":["","","","\"use strict\";\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  // Set and initialize elm constants\n  var node = document.getElementById(\"note-box\");\n  var elmApp = Elm.Main.embed(node);\n  var synth;\n  var chooseSynth;\n  var context = new AudioContext();\n\n  // Selects & creates a new instance of tone synthesizer\n  chooseSynth = function chooseSynth(elmValue) {\n    switch (elmValue) {\n      case \"duosynth\":\n        var limiter = new Tone.Limiter(-14);\n        return new Tone.DuoSynth().connect(limiter).toMaster();\n      case \"fmsynth\":\n        return new Tone.FMSynth().toMaster();\n      case \"membsynth\":\n        return new Tone.MembraneSynth().toMaster();\n      case \"monosynth\":\n        return new Tone.MonoSynth().toMaster();\n      case \"plucksynth\":\n        return new Tone.PluckSynth().toMaster();\n      case \"amsynth\":\n        return new Tone.AMSynth().toMaster();\n      case \"Please Select a Sound-\":\n        return \"None\";\n      default:\n        console.log(\"Something has gone horribly awry!\");\n    }\n  };\n\n  // Receive info from Elm\n  if (navigator.userAgent.match(/Android/i) || navigator.userAgent.match(/webOS/i) || navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPad/i)) {\n    elmApp.ports.initMobile.subscribe(function (val) {\n      StartAudioContext(Tone.context, \"#playButton\");\n\n      elmApp.ports.synthToJS.subscribe(function (elmValue) {\n        synth = chooseSynth(elmValue);\n        var limiter = new Tone.Limiter(-6);\n\n        elmApp.ports.noteToJS.subscribe(function (elmNote) {\n          if (elmNote === \"\") {\n            synth.triggerRelease();\n          } else {\n            synth.triggerAttack(elmNote);\n          }\n        });\n      });\n    });\n  } else {\n    elmApp.ports.synthToJS.subscribe(function (elmValue) {\n      synth = chooseSynth(elmValue);\n      var limiter = new Tone.Limiter(-6);\n\n      elmApp.ports.noteToJS.subscribe(function (elmNote) {\n        if (elmNote === \"\") {\n          synth.triggerRelease();\n        } else {\n          synth.triggerAttack(elmNote);\n        }\n      });\n    });\n  }\n\n  console.log(\"Initialized app\");\n});\n"]}