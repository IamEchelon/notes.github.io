{"version":3,"sources":["app/elm/Main.elm","app/elm/Note.elm","app/elm/Shapes.elm","app/js/index.js","app/js/synths.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;CCAA;AAAA;AAAA;AAAA;CCAA;AAAA;AAAA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/DA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlDA;AAAA","file":"public/js/app.js","sourcesContent":["","","","'use strict';\n\nvar inst = require('./synths');\n// const Tone = require('tone');\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  // Set and initialize elm constants\n  var node = document.getElementById('note-box');\n  var elmApp = Elm.Main.embed(node);\n  var context = new AudioContext();\n  var synth;\n\n  // Selects & creates a new instance of tone synthesizer\n  function chooseSynth(elmSynth) {\n    switch (elmSynth) {\n      case 'duosynth':\n        console.log(inst.duosynth());\n        return inst.duosynth();\n      case 'fmsynth':\n        return inst.fmsynth();\n      case 'amsynth':\n        return inst.amsynth();\n      case 'membsynth':\n        return inst.membsynth();\n      case 'monosynth':\n        return inst.monosynth();\n      case 'square':\n        return inst.square();\n      case 'Please Select a Sound-':\n        return 'None';\n      default:\n        console.log('Something has gone horribly awry!');\n    }\n  }\n\n  function nav(browser) {\n    return navigator.userAgent.match(browser);\n  }\n\n  // Receive info from Elm\n  if (nav(/Android/i) || nav(/iPhone/i) || nav(/iPad/i)) {\n    elmApp.ports.initMobile.subscribe(setMobileContext);\n  } else {\n    elmApp.ports.synthToJS.subscribe(synthSelection);\n  }\n\n  // elm callbacks\n  function setMobileContext(clear) {\n    StartAudioContext(Tone.context, '#playButton');\n    elmApp.ports.synthToJS.subscribe(synthSelection);\n  }\n\n  function synthSelection(elmSynth) {\n    synth = chooseSynth(elmSynth);\n    elmApp.ports.noteToJS.subscribe(triggerNote);\n  }\n\n  function triggerNote(elmNote) {\n    elmNote === '' ? synth.triggerRelease() : synth.triggerAttack(elmNote);\n  }\n\n  console.log('Initialized app');\n});\n","'use strict';\n\nvar Tone = require('tone');\nvar limiter = new Tone.Limiter(-14);\n\n// create instruments\nfunction duosynth() {\n  return new Tone.DuoSynth().toMaster();\n}\n\nfunction fmsynth() {\n  return new Tone.FMSynth().connect(limiter).toMaster();\n}\n\nfunction amsynth() {\n  return new Tone.AMSynth().connect(limiter).toMaster();\n}\n\nfunction membsynth() {\n  return new Tone.MembraneSynth().connect(limiter).toMaster();\n}\n\nfunction monosynth() {\n  return new Tone.MonoSynth().connect(limiter).toMaster();\n}\n\nfunction square() {\n  var sq = new Tone.Synth({\n    oscillator: {\n      type: 'sawtooth'\n    },\n    envelope: {\n      attack: 0.01,\n      decay: 0.2,\n      sustain: 0.2,\n      release: 0.2\n    }\n  }).connect(limiter).toMaster();\n  return sq;\n}\n\n// export\nmodule.exports = {\n  duosynth: duosynth,\n  fmsynth: fmsynth,\n  amsynth: amsynth,\n  membsynth: membsynth,\n  monosynth: monosynth,\n  square: square\n};\n"]}